import java.util.Scanner;

public class Best_Fit {
	
	public static int Bestfit(int limit,int[] parcels) {
		
		int num=0;
		
		int n = parcels.length;
		
		int[] remain = new int [n];
		
		for (int i=0; i<n; i++)
	    {
	        // Find the best bin that ca\n accomodate
	        // weight[i]
	        int j;
	 
	        // Initialize minimum space left and index
	        // of best bin
	        int min = limit+1, bi = 0;
	 
	        for (j=0; j<num; j++)
	        {
	            if (remain[j] >= parcels[i] &&
	            		remain[j] - parcels[i] < min)
	            {
	                bi = j;
	                min = remain[j] - parcels[i];
	            }
	        }
	 
	        // If no bin could accommodate weight[i],
	        // create a new bin
	        if (min==limit+1)
	        {
	        	remain[num] = limit - parcels[i];
	            num++;
	        }
	        else // Assign the item to best bin
	            remain[bi] -= parcels[i];
	    }
	    return num;
		
	}

	public static void main(String args[]) {
		
		Scanner sc = new Scanner(System.in);
		
		System.out.print("Enter the track limit: ");
        int limit = sc.nextInt();
                
        System.out.print("Enter the number of parcels: ");
        int num = sc.nextInt();
        
        int[] parcels = new int[num];
        
        for(int x=0;x<parcels.length;x++){
        
        	System.out.print("Enter weight for parcel "+(x+1)+": ");
        	parcels[x]=sc.nextInt();
        }
        
        Bestfit(limit,parcels);
	}
	
}
